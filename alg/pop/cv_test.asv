function [eval_summary, eval_detail] = cv_test(mat, varargin)
% rec: recommendation method
% mat: matrix storing records
% mode of cross validation: 
%   un: user side normal 
%   in: item side normal
%   en: entry wise normal
%   u: user
%   i: item


[folds, fold_mode, seed] = process_options(varargin, 'folds', 5, 'fold_mode', 'un', 'seed', 1);

assert(folds>0)

rng(seed);
mat_fold = kFolds(mat, folds, fold_mode);
eval_detail = struct();

metric_folds = cell(folds,1);
for i=1:folds
    metric_fold = metric_folds{i};
    fns = fieldnames(metric_fold);
    for f=1:length(fns)
        fieldname = fns{f};
        if isfield(eval_detail, fieldname)
            %metric.(fieldname) = metric.(fieldname) + [metric_fold.(fieldname);(metric_fold.(fieldname)).^2];
            eval_detail.(fieldname) = [eval_detail.(fieldname); metric_fold.(fieldname)];
        else
            %metric.(fieldname) = [metric_fold.(fieldname);(metric_fold.(fieldname)).^2];
            eval_detail.(fieldname) = metric_fold.(fieldname);
        end
    end
end
fns = fieldnames(eval_detail);
for f=1:length(fns)
    fieldname = fns{f};
    field = eval_detail.(fieldname);
    %field_mean = field(1,:) / folds;
    %field_std = sqrt(field(2,:)./folds - field_mean .* field_mean);
    eval_summary.(fieldname) = [mean(field,1); std(field,0,1)];
end
elapsed = mean(elapsed,1);
end

